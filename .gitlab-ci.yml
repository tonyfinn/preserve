default:
    image: node:12-buster
    cache:
        key:
            files:
                - package.json
        paths:
            - node_modules

stages:
    - check
    - package
    - release

check:
    stage: check
    cache:
        policy: push
    artifacts:
        paths:
            - dist/
            - preserve-ui/cypress/
        reports:
            junit: preserve-ui/cypress/results.xml
    script:
        # jq is used by build scripts, rest used by cypress
        - apt-get update && apt-get install -y jq libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        - make clean dist check

package-web:
    stage: package
    rules:
        - if: $CI_COMMIT_TAG
          when: on_success
    cache:
        policy: pull
    artifacts:
        expire_in: never
        paths:
            - target/*
    script:
        - apt-get update && apt-get install -y jq
        - make package-web

package-electron-linux:
    image: electronuserland/builder:12
    stage: package
    rules:
        - if: $CI_COMMIT_TAG
          when: on_success
    cache:
        policy: pull
    artifacts:
        expire_in: never
        paths:
            - target/*
    script:
        - apt-get update && apt-get install -y jq fakeroot dpkg
        - make package-electron-linux

package-electron-windows:
    stage: package
    image: electronuserland/builder:wine-mono
    rules:
        - if: $CI_COMMIT_TAG
          when: on_success
    cache:
        policy: pull
    artifacts:
        expire_in: never
        paths:
            - target/*
    script:
        # deps
        - apt-get update && apt-get install -y jq
        # Fix image's bundled 32bit wine folder
        - rm -rf /root/.wine
        - winecfg
        # make package
        - make package-electron-windows

docker:
    stage: package
    services:
        - docker:19.03-dind
    image: docker:19.03
    cache:
        policy: pull
    artifacts:
        expire_in: never
        paths:
            - target/*
    rules:
        - if: $CI_COMMIT_TAG
          when: on_success
    script:
        - apk add make jq
        - mkdir -p target/
        - echo -n $DOCKER_PASSWORD | docker login -u tonyfinn --password-stdin https://index.docker.io/v1/
        - make docker && make publish-docker
        - docker images --no-trunc --quiet tonyfinn/preserve:latest > target/docker-tag.txt

release:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:edge
    rules:
        - if: $CI_COMMIT_TAG
          when: on_success
    script:
        - >
            VERSION=$(echo $CI_COMMIT_TAG | tr -d 'v') &&
            DOCKER_SHA=$(cat target/docker-tag.txt | tr ':' '-') &&
            CHANGELOG=$(awk '/^# /{f=1} f; /^# / && ++c==2{exit}' CHANGELOG.md | head -n -1) &&
            release-cli create --name $CI_COMMIT_TAG --description "$CHANGELOG"
            --tag-name $CI_COMMIT_TAG --ref $CI_COMMIT_SHA
            --assets-link "{\"name\":\"Windows Installer (Desktop App)\",\"url\":\"https://gitlab.com/tonyfinn/preserve/-/jobs/artifacts/v${VERSION}/raw/target/Preserve-${VERSION}%20Setup.exe?job=package-electron-windows\",\"link_type\":\"package\"}"
            --assets-link "{\"name\":\".rpm for Fedora (Desktop App)\",\"url\":\"https://gitlab.com/tonyfinn/preserve/-/jobs/artifacts/v${VERSION}/raw/target/preserve-electron-${VERSION}-1.x86_64.rpm?job=package-electron-linux\",\"link_type\":\"package\"}"
            --assets-link "{\"name\":\".deb for Debian/Ubuntu (Desktop App)\",\"url\":\"https://gitlab.com/tonyfinn/preserve/-/jobs/artifacts/v${VERSION}/raw/target/preserve-electron_${VERSION}_amd64.deb?job=package-electron-linux\",\"link_type\":\"package\"}"
            --assets-link "{\"name\":\"Packaged Web Application\",\"url\":\"https://gitlab.com/tonyfinn/preserve/-/jobs/artifacts/v${VERSION}/raw/target/preserve-${VERSION}.tar.gz?job=package-web\",\"link_type\":\"package\"}"
            --assets-link "{\"name\":\"Docker image\",\"url\":\"https://hub.docker.com/layers/tonyfinn/preserve/${VERSION}/images/${DOCKER_SHA}?context=repo\",\"link_type\":\"image\"}"
